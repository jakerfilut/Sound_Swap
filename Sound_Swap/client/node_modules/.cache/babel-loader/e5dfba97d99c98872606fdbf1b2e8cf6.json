{"ast":null,"code":"var _jsxFileName = \"/Users/francescah12/development/code/mod4/new-sound-swap/Sound_Swap/Sound_Swap/client/src/pages/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist() {\n  _s();\n\n  const [songs, setSongs] = useState([]);\n  const [updateSong, setUpdateSong] = useState(false);\n  const [user, setUser] = useState([]);\n\n  const convertHMS = value => {\n    const sec = parseInt(value, 10); // convert value to number if it's string\n\n    let hours = Math.floor(sec / 3600); // get hours\n\n    let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n\n    let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    } // console.log(hours + \":\" + minutes + \":\" + seconds);\n\n\n    return minutes + \":\" + seconds; // Return is HH : MM : SS\n  };\n\n  useEffect(() => {\n    fetch(\"/songs\").then(res => res.json()).then(songData => setSongs(songData));\n    console.log(\"updated song\");\n  }, [updateSong]);\n\n  function handleDelete(song) {\n    fetch(`/songs/${song.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"delete song\");\n    setUpdateSong(!updateSong);\n  }\n\n  const mapSongs = songs.map(song => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song_container_card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"song_title\",\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: convertHMS(song.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(song),\n        children: \"Remove From Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song_container\",\n    children: mapSongs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playlist, \"TdbEcP9gPuOKTbnzeLy/F9l+3is=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/francescah12/development/code/mod4/new-sound-swap/Sound_Swap/Sound_Swap/client/src/pages/Playlist.js"],"names":["React","useState","useEffect","useReducer","Playlist","songs","setSongs","updateSong","setUpdateSong","user","setUser","convertHMS","value","sec","parseInt","hours","Math","floor","minutes","seconds","fetch","then","res","json","songData","console","log","handleDelete","song","id","method","headers","mapSongs","map","title","image","artist","name","duration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nfunction Playlist() {\n  const [songs, setSongs] = useState([]);\n  const [updateSong, setUpdateSong] = useState(false);\n  const [user, setUser] = useState([]);\n\n  const convertHMS = (value) => {\n    const sec = parseInt(value, 10); // convert value to number if it's string\n    let hours = Math.floor(sec / 3600); // get hours\n    let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n    let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    // console.log(hours + \":\" + minutes + \":\" + seconds);\n    return minutes + \":\" + seconds; // Return is HH : MM : SS\n  };\n\n  useEffect(() => {\n    fetch(\"/songs\")\n      .then((res) => res.json())\n      .then((songData) => setSongs(songData));\n    console.log(\"updated song\");\n  }, [updateSong]);\n\n  function handleDelete(song) {\n    fetch(`/songs/${song.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    console.log(\"delete song\");\n    setUpdateSong(!updateSong);\n  }\n\n  const mapSongs = songs.map((song) => {\n    return (\n      <div className=\"song_container_card\">\n        <h1 className=\"song_title\">{song.title}</h1>\n        <img src={song.image} />\n        <div>{song.artist}</div>\n        <div>{user.name}</div>\n        <div>{convertHMS(song.duration)}</div>\n        <button onClick={() => handleDelete(song)}>Remove From Playlist</button>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"song_container\">\n      {mapSongs}\n      {/* <button>Create Playlist</button> */}\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}