{"ast":null,"code":"var _jsxFileName = \"/Users/jakefilut/Development/Final Projects/Sound_Swap/Sound_Swap/client/src/pages/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist() {\n  _s();\n\n  const [songs, setSongs] = useState([]);\n  const [updateSong, setUpdateSong] = useState(false);\n  const [update, setUpdate] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [playlist, setPlaylist] = useState({});\n  useEffect(() => {\n    fetch(\"/songs\").then(res => res.json()).then(songData => setSongs(songData));\n    console.log(\"updated song\");\n  }, [updateSong]);\n\n  function handleDelete(song) {\n    fetch(`/songs/${song.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"delete song\");\n    setUpdateSong(!updateSong);\n  }\n\n  const mapSongs = songs.map(song => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song_container_card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"song_title\",\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(song),\n        children: \"Remove From Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  });\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  function handlePlaylist(e) {\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n    fetch(\"/songs\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(playlist)\n    });\n  }, [update]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song_container\",\n    children: [mapSongs, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search_menu\",\n      id: \"search\",\n      onSubmit: handlePlaylist,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Title\",\n        placeholder: \"Playlist Title\",\n        name: \"s\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playlist, \"mcjWm51equ8ZXkDx2SidoHmmFG4=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/jakefilut/Development/Final Projects/Sound_Swap/Sound_Swap/client/src/pages/Playlist.js"],"names":["React","useState","useEffect","Playlist","songs","setSongs","updateSong","setUpdateSong","update","setUpdate","title","setTitle","playlist","setPlaylist","fetch","then","res","json","songData","console","log","handleDelete","song","id","method","headers","mapSongs","map","image","artist","duration","handleChange","e","target","value","handlePlaylist","preventDefault","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Playlist() {\n  const [songs, setSongs] = useState([]);\n  const [updateSong, setUpdateSong] = useState(false);\n\n  const [update, setUpdate] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const [playlist, setPlaylist] = useState({});\n\n  useEffect(() => {\n    fetch(\"/songs\")\n      .then((res) => res.json())\n      .then((songData) => setSongs(songData));\n    console.log(\"updated song\");\n  }, [updateSong]);\n\n  function handleDelete(song) {\n    fetch(`/songs/${song.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    console.log(\"delete song\");\n    setUpdateSong(!updateSong);\n  }\n\n  const mapSongs = songs.map((song) => {\n    return (\n      <div className=\"song_container_card\">\n        <h1 className=\"song_title\">{song.title}</h1>\n        <img src={song.image} />\n        <div>{song.artist}</div>\n        <div>{song.duration}</div>\n        <button onClick={() => handleDelete(song)}>Remove From Playlist</button>\n      </div>\n    );\n  });\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  function handlePlaylist(e) {\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n    fetch(\"/songs\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(playlist),\n    });\n  }, [update]);\n\n  return (\n    <div className=\"song_container\">\n      {mapSongs}\n      <form className=\"search_menu\" id=\"search\" onSubmit={handlePlaylist}>\n        <input\n          type=\"text\"\n          id=\"Title\"\n          placeholder=\"Playlist Title\"\n          name=\"s\"\n          onChange={handleChange}\n        />\n        <button className=\"button\" type=\"submit\">\n          Create Playlist\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}