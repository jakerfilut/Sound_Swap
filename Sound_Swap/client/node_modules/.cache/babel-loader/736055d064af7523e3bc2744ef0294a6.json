{"ast":null,"code":"var _jsxFileName = \"/Users/francescah12/development/code/mod4/new-sound-swap/Sound_Swap/Sound_Swap/client/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport \"../pages/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm({\n  onLogin\n}) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forms\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"username\",\n          autoComplete: \"off\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"fill\",\n          color: \"secondary\",\n          type: \"submit\",\n          children: isLoading ? \"Loading...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"0Ji54UNEhlpZjS5ukXWSjG/LLP8=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/francescah12/development/code/mod4/new-sound-swap/Sound_Swap/Sound_Swap/client/src/components/LoginForm.js"],"names":["React","useState","Button","Error","Input","FormField","Label","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","err","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\nimport \"../pages/Login.css\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <div className=\"forms\">\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"secondary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}