{"ast":null,"code":"var _jsxFileName = \"/Users/jakefilut/Development/Final Projects/Sound_Swap/Sound_Swap/client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport Search from \"../pages/Search\";\nimport Playlist from \"../pages/Playlist\";\nimport { MdRouter } from \"react-icons/md\"; // import NewPlaylist from \"../pages/Search\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then(r => {\n      if (r.ok) {\n        r.json().then(user => setUser(user));\n      }\n    });\n  }, []);\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      user: user,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jakefilut/Development/Final Projects/Sound_Swap/Sound_Swap/client/src/components/App.js"],"names":["React","useEffect","useState","Switch","Route","NavBar","Login","Search","Playlist","MdRouter","App","user","setUser","fetch","then","r","ok","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAY,IAAAA,KAAK,CAAC,KAAD,CAAL,CAAaC,IAAb,CAAmBC,CAAD,IAAO;AACvB,UAAIA,CAAC,CAACC,EAAN,EAAU;AACRD,QAAAA,CAAC,CAACE,IAAF,GAASH,IAAT,CAAeH,IAAD,IAAUC,OAAO,CAACD,IAAD,CAA/B;AACD;AACF,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,MAAI,CAACA,IAAL,EAAW,oBAAO,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,OAAO,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AASD;;GAvBQD,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport Search from \"../pages/Search\";\nimport Playlist from \"../pages/Playlist\";\nimport { MdRouter } from \"react-icons/md\";\n// import NewPlaylist from \"../pages/Search\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <>\n      <NavBar user={user} setUser={setUser} />\n      <main>\n        <Playlist />\n        <Search user={user} />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}