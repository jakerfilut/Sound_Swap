{"ast":null,"code":"var _jsxFileName = \"/Users/jakefilut/Development/Final Projects/Sound_Swap/Sound_Swap/client/src/pages/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist() {\n  _s();\n\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    fetch(\"/songs\").then(res => res.json()).then(songData => setSongs(songData));\n  }, []);\n\n  function handleDelete(song) {\n    fetch(\"/songs\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(songs => {\n      console.log(songs);\n    });\n  }\n\n  const mapSongs = songs.map(song => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song_container_card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(song),\n        children: \"Remove From Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mapSongs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Playlist, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/jakefilut/Development/Final Projects/Sound_Swap/Sound_Swap/client/src/pages/Playlist.js"],"names":["React","useState","useEffect","Playlist","songs","setSongs","fetch","then","res","json","songData","handleDelete","song","method","headers","console","log","mapSongs","map","title","image","artist","duration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,QAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,QAAD,IAAcL,QAAQ,CAACK,QAAD,CAF9B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BN,IAAAA,KAAK,CAAC,QAAD,EAAW;AACdO,MAAAA,MAAM,EAAE,QADM;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFK,KAAX,CAAL,CAMGP,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSH,KAAD,IAAW;AACfW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACD,KATH;AAUD;;AAED,QAAMa,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAWN,IAAD,IAAU;AACnC,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAEP,IAAI,CAACQ;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMR,IAAI,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAMT,IAAI,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMX,YAAY,CAACC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVgB,CAAjB;AAYA,sBAAO;AAAA,cAAMK;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnCQd,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Playlist() {\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/songs\")\n      .then((res) => res.json())\n      .then((songData) => setSongs(songData));\n  }, []);\n\n  function handleDelete(song) {\n    fetch(\"/songs\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((songs) => {\n        console.log(songs);\n      });\n  }\n\n  const mapSongs = songs.map((song) => {\n    return (\n      <div className=\"song_container_card\">\n        <h1>{song.title}</h1>\n        <img src={song.image} />\n        <div>{song.artist}</div>\n        <div>{song.duration}</div>\n        <button onClick={() => handleDelete(song)}>Remove From Cart</button>\n      </div>\n    );\n  });\n\n  return <div>{mapSongs}</div>;\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}